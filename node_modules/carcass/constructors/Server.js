var carcass = require('carcass');
var express = require('express');
var _ = require('underscore');

module.exports = Server;

// Server is ...
// Servers can start and stop, and mount some resources.
function Server(attributes, options) {
    this.app = express();
    this.mounted = {};
    this.initialize.apply(this, arguments);
};

// Initialize is an empty function by default. Override it with your own
// initialization logic.
Server.prototype.initialize = function() {};

// .
Server.prototype.mount = function(name, route) {
    var self = this;
    if (!carcass.resources || !carcass.resources[name]) {
        return self;
    }
    // FIXME
    route || (route = '/');
    // Don't mount a same resource to a same route multiple times.
    self.mounted[route] || (self.mounted[route] = {});
    if (!self.mounted[route][name]) {
        var resource = new carcass.resources[name]();
        // Handle dependencies.
        _.each(resource.dependencies || null, function(name, route) {
            self.mount(name, route);
        });
        self.mounted[route][name] = true;
        // resource.mountTo(self.app, route);
        self.app.use(route, resource);
    }
    return self;
};

// .
Server.prototype.mountAll = function() {
    var self = this;
    _.each(carcass.resources || null, function(Res, name) {
        self.mount(name);
    });
    return this;
};
