var path = require('path');
var fs = require('fs');
var _ = require('underscore');

module.exports = function(obj) {

    // Register every file in a dir plus a namespace.
    obj.register = function(dir, namespace) {
        var self = this;
        namespace || (namespace = 'plugins');
        // TODO: validate namespace.
        self[namespace] || (self[namespace] = {});
        // .
        dir = path.join(dir, namespace);
        fs.readdirSync(dir).sort(alphabetical).forEach(function(name) {
            var component = require(path.join(dir, name));
            if (!component.title) {
                component.title = name.replace(/\..+$/, '');
            }
            self[namespace][component.title] = component;
        });
    };

    // Load a plugin.
    obj.load = function(namespace, title) {
        if (!this[namespace] || !this[namespace][title]) {
            return false;
        }
        return this[namespace][title];
    };

    // A method that can make something ...
    obj.mixable = function(target) {
        var self = this;
        target.mixinPlugin = function(plugin) {
            plugin(this);
            return this;
        };
        target.mixin = function(namespace, title, options) {
            var factory = self.load(namespace, title);
            if (factory) {
                this.mixinPlugin(factory(options));
            }
            return this;
        };
        _.bindAll(target, 'mixinPlugin', 'mixin');
    };

    _.bindAll(obj, 'register', 'load', 'mixable');

};

// Helpers
// -------

// .
function alphabetical(a, b) {
    return a.toLowerCase().localeCompare(b.toLowerCase());
}
